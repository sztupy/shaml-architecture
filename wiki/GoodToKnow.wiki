#summary Things that you might want to know.

= libraries =

The libraries directory contains pre-build assemblies. Some of them are the official ones, some of them are the edge versions of the appropriate packages, and some of them are modified so they'll work under mono 2.4 too. 

Here are the libraries that are "unstable" versions:
 * NauckIt.PostgreSQLProvider: built the latest one from source
 * NHaml: built the latest one from source with some minor fixes.
 * DotNetOpenAuth: built the latest one from the mono2 branch. Has some modifications not yet avaialable in the official mono2 branch, these can be downloaded from "github":http://github.com/sztupy/dotnetopenid/tree/mono2  

= Database =

S#aml-architecture uses PostgreSQL databases to store both the domain and the membership/role data. You have to configure the database access both inside Web.config and NHibernate.config for them to work. in the db directory after each run, the application will generate the "CREATE TABLE" commands you need to run for the schema to be avaialable. This directory also contains the schema file for the Membership/Role provider.

= Membership/Role/Profile/Session =

Shaml uses the NauckIt.PostgreSQL provider to store these kinds of information. It also has a domain class called User, that maps to the same data, if you need to access the user informations from NHibernate.

= OpenID =

DotNetOpenAuth is unfortunately not very stable on mono, but some recent changes made the !RelyingParty working. Check the "libraries" part of this page for more information. Shaml uses a modified MembershipProvider to store OpenID data, that allows users to have multiple identities.

= Compass =

Compass is an Sass based CSS framework. Shaml uses compass as a post-processor of stylesheet files (the default project file will run compass --update after each run, so you don't have to). Read more about compass at http://compass-style.org

= Changes from S#arp-architecture =

Shaml.Core and Shaml.Testing are more-or-less the same as s#arp-architecture, but without the dependency on Windsor (don't work under mono) and !ServiceLocator (don't work under mono). Shaml also uses some newer assemblies, like ASP.NET MVC 1.0, and Fluent NHibernate.